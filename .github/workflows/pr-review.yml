name: PR Review Workflow

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: mvn clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit

  coverage:
    name: Check Code Coverage
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.result == 'success'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests with coverage
      run: mvn clean test jacoco:report
      
    - name: Check coverage threshold
      run: |
        mvn jacoco:check -Djacoco.haltOnFailure=true
        
    - name: Generate coverage report
      uses: codecov/codecov-action@v4
      with:
        file: target/site/jacoco/jacoco.xml
        fail_ci_if_error: true
        
    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80

  pr-status:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [test, coverage]
    if: always()
    
    steps:
    - name: Check all jobs status
      run: |
        if [[ "${{ needs.test.result }}" == "success" && 
              "${{ needs.coverage.result }}" == "success" ]]; then
          echo "✅ All checks passed! PR is ready for review."
        else
          echo "❌ Some checks failed. Please fix the issues before merging."
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "- Tests failed or were skipped"
          fi
          if [[ "${{ needs.coverage.result }}" != "success" ]]; then
            echo "- Coverage check failed or was skipped"
          fi
          exit 1
        fi
